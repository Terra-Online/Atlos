@use '../../styles/palette.scss' as *;

.markFilterContainer {
    width: 100%;
    overflow: hidden;
    border-radius: 3px;
    box-shadow: 0 3px 4px rgba($black, 0.25);
    margin-bottom: 0.25rem;
}

.filterHeader {
    z-index: 1;
    user-select: none;
    -webkit-user-select: none;
    position: relative;
    width: 100%;
    height: 3rem;
    display: flex;
    align-items: center;
    background-color: $white-1;
    border-radius: 3px 3px 0 0;
    cursor: pointer;
    transition: all 0.2s;
    > .filterTitle {
        color: $grey-1;
        text-transform: uppercase;
        font-weight: 400;
        font-size: 1rem;
        text-shadow: 0 2px 3px rgba($black, 0.25);
        flex-grow: 1;
    }
    > .filterIcon {
        width: 18px;
        height: 18px;
        margin: 0 0.8rem;
        display: flex;
        align-items: center;
        justify-content: center;
        filter: drop-shadow(0 2px 3px rgba($black, 0.25));
        > .icon {
            width: 100%;
            height: 100%;
            fill: $grey-1;
            transition: fill 0.2s;
        }
    }

    .toggleIcon {
        margin-left: auto;
        margin-right: 1rem;
        svg {
            //will replace
            width: 20px;
            height: 20px;
            fill: $grey-1;
            transition: transform 0.3s;
            &.expanded {
                transform: rotate(180deg);
                fill: $primary-accent-5;
            }
        }
    }
}

.filterContent {
    z-index: 2;
    position: relative;
    border-radius: 0 0 3px 3px;
    background-color: $white-1;
    display: grid;
    grid-template-rows: 0fr;
    transition: grid-template-rows 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    &.expanded {
        grid-template-rows: 1fr;
        transition: grid-template-rows 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    }
    &:not(.expanded) {
        transition: grid-template-rows 0.4s cubic-bezier(0.7, 0, 0.45, 1) 0.08s;
    }
    .contentInner {
        .filterContent.expanded & {
            opacity: 1;
            transform: translateY(0);
            filter: blur(0);
            transition:
                opacity 0.4s ease 0.15s,
                transform 0.4s ease 0.15s,
                filter 0.3s ease 0.2s;
        }
        .filterContent:not(.expanded) & {
            opacity: 0;
            transform: translateY(-5px);
            filter: blur(1rem);
            transition:
                opacity 0.12s cubic-bezier(0, 0.3, 0.25, 1),
                transform 0.12s cubic-bezier(0, 0.3, 0.25, 1),
                filter 0.04s cubic-bezier(0, 0.3, 0.25, 1);
        }
    }
    .contentInner {
        min-height: 0;
        opacity: 0;
        padding: 0 0.75rem;
        transform: translateY(-8px);
        filter: blur(5px);
        transition:
            opacity 0.4s ease 0.1s,
            transform 0.4s ease 0.1s,
            filter 0.3s ease 0.15s;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 0 0.75rem;
        width: 100%;
        will-change: opacity, transform, filter;
        &.visible {
            opacity: 1;
            transform: translateY(0);
            filter: blur(0);
        }
    }
    .placeholderContent {
        p {
            color: #000;
            margin: 8px 0;
            font-family: 'Roboto Slab', serif;
            font-size: 0.85rem;
            &:first-child {
                margin-top: 0;
            }
            &:last-child {
                margin-bottom: 0;
            }
        }
    }
}

.markEmpty {
    grid-column: 1 / -1;
    text-align: left;
    padding: 0 0 1rem 0;
}

@media (max-width: 576px) {
    //adjust later
    .filterContent .contentInner {
        grid-template-columns: 1fr;
    }
}
