@use '../../styles/palette.scss' as *;

:root, :root[data-theme='light'] {
    --trigger-bg: #{$grey-1};
    --trigger-knob: #{$grey-3};
    --trigger-on: #{$white-1};
    --trigger-off: #{$grey-1};
    --trigger-active: #{$primary-accent-4};
    --trigger-label: #{$white-1};
}
:root[data-theme='dark'] {
    --trigger-bg: #{$black-1};
    --trigger-knob: #{$grey-2};
    --trigger-on: #{$white-1};
    --trigger-off: #{$grey-1};
    --trigger-active: #{$primary-accent-4};
    --trigger-label: #{$white-1};
}

$transition-speed: 0.3s; //import from global size.scss later

.triggerContainer {
    position: absolute;
    z-index: 900;
    display: flex;
    flex-direction: column;
    gap: 0.6rem;
    transition: transform $transition-speed ease-in-out;
    left: 1.1rem;
    bottom: 1rem;
}

.trigger {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 0.6rem;
    &.disabled {
        opacity: 0.5;
        pointer-events: none;
    }
    .triggerIcons {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 6px;
        z-index: 1;
        pointer-events: none;

        .triggerIcon {
            display: flex;
            align-items: center;
            justify-content: center;
            width: 1.35rem;
            height: 1.35rem;
            transition: color 0.4s ease;// using color-driven transition for universal compatibility
            svg {
                display: block; // avoid slight offset caused by baseline
                width: 100%;
                height: 100%;
                fill: currentColor;
            }
            svg path {
                fill: currentColor;
            }
            svg [stroke] {
                stroke: currentColor;
            }
            &.off > svg {
                transform: translateX(1px);
                width: calc(1.35rem - 2px);
                height: calc(1.35rem - 2px); // optimize for vertical center
            }
            //on state
            &.on {
                color: var(--trigger-on);
            }
            &.off {
                color: var(--trigger-off);
            }
            &.on > svg {
                width: calc(1.35rem - 2px);
                height: calc(1.35rem - 2px);
            }
        }
    }
    .triggerButton {
        position: relative;
        width: calc(4.5rem - 4px);
        height: 2.25rem;
        border-radius: 4px;
    background-color: var(--trigger-bg);
        padding: 2px;
        cursor: pointer;
        overflow: hidden;
        transition: all 0.2s ease;
        box-shadow:
            0px 0px 4px 1px rgba($white-1, 0.5),
            inset 0px 0px 2px rgba($black-0, 0.2);
        &::after {
            content: '';
            position: absolute;
            top: 3px;
            left: 3px;
            width: calc(2.25rem - 6px);
            height: calc(2.25rem - 6px);
            border-radius: 2px;
            background-color: var(--trigger-knob);
            box-shadow: 0 1px 2px rgba($black-0, 0.3); /* THEME-NOTE: keep shadow */
            transition:
                transform 0.2s,
                background-color 0.2s ease;
            z-index: 0;
        }
        &:focus {
            outline: none;
            box-shadow: 0 0 2px 1px rgba($white-0, 0.75); /* THEME-NOTE: keep shadow */
        }
        &.active {
            &::after {
                transform: translateX(calc(calc(2.25rem - 6px) + 2px));
                background-color: var(--trigger-active);
                box-shadow: 0 1px 3px rgba($black-0, 0.4); /* THEME-NOTE: keep shadow */
            }
            //off state
            .triggerIcons {
                .on {
                    color: var(--trigger-off);
                }
                .off {
                    color: var(--trigger-on);
                }
            }
        }
    }
    .triggerLabel {
        user-select: none;
        font-size: 1rem;
        text-transform: uppercase;
    color: var(--trigger-label);
    text-shadow: 0 1px 2px rgba($black-0, 1); /* THEME-NOTE: keep shadow */
        white-space: nowrap;
    }
}
